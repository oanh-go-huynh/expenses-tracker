version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: expenses_postgres
    restart: always
    environment:
      POSTGRES_DB: expenses_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432" 
    volumes:
      - postgres_data:/var/lib/postgresql/data 
    healthcheck: 
      test: ["CMD-SHELL", "pg_isready -U user -d expenses_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis service
  redis:
    image: redis:6-alpine
    container_name: expenses_redis
    restart: always
    ports:
      - "6379:6379" 
    healthcheck: 
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: expenses_pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80" 
    depends_on:
      postgres:
        condition: service_healthy 

  backend:
    build:
      context: ./backend 
      dockerfile: Dockerfile
    container_name: expenses_backend
    restart: always
    ports:
      - "3000:3000" 
    environment:
      DATABASE_URL: postgresql://user:password@postgres:5432/expenses_db?schema=public
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: "yourSuperSecretKey"
      JWT_EXPIRES_IN: "1d"
      PORT: 3000
    depends_on:
      postgres:
        condition: service_healthy 
      redis:
        condition: service_healthy 


  frontend:
    build:
      context: ./frontend 
      dockerfile: Dockerfile
    container_name: expenses_frontend 
    restart: always
    ports:
      - "3001:3000" 
    environment:
      NEXT_PUBLIC_GRAPHQL_ENDPOINT: http://backend:3000/graphql
      PORT: 3000 
    depends_on:
      - backend 
volumes:
  postgres_data: 